<?xml version="1.0" encoding="GBK"?>
<!-- 指定Struts2配置文件的DTD信息 -->
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.1.7//EN"
	"http://struts.apache.org/dtds/struts-2.1.7.dtd">
<!-- Struts2配置文件的根元素 -->
<struts>
	<!-- 配置了系列常量 -->
	<constant name="struts.custom.i18n.resources" value="resource" />
	<constant name="struts.i18n.encoding" value="GBK" />
	<constant name="struts.devMode" value="true" />
	<package name="default" extends="struts-default" namespace="/">
		<interceptors>
			<!-- 配置普通员工角色的权限检查拦截器 -->
			<interceptor name="empAuth"
				class="qiang.action.interceptor.EmpInterceptor" />
			<!-- 配置经理角色的权限检查拦截器 -->
			<interceptor name="mgrAuth"
				class="qiang.action.interceptor.MgrInterceptor" />
			<!-- 配置普通员工的默认的拦截器栈 -->
			<interceptor-stack name="empStack">
				<interceptor-ref name="defaultStack" />
				<interceptor-ref name="empAuth" />
			</interceptor-stack>
			<!-- 配置经理的默认的拦截器栈 -->
			<interceptor-stack name="mgrStack">
				<interceptor-ref name="defaultStack" />
				<interceptor-ref name="mgrAuth" />
			</interceptor-stack>
		</interceptors>

		<!-- 定义全局Result映射 -->
		<global-results>
			<!-- 定义sql、root两个异常对应的视图页 -->
			<result name="business">/WEB-INF/content/error.jsp</result>
			<result name="root">/WEB-INF/content/error.jsp</result>
			<!-- 定义login逻辑视图对应的视图资源 -->
			<result name="login">/WEB-INF/content/login.jsp</result>
		</global-results>

		<!-- 定义全局异常映射 -->
		<global-exception-mappings>
			<!-- 当Action中遇到OAException异常时， 系统将转入name为business的结果中 -->
			<exception-mapping exception="qiang.exception.OAException"
				result="business" />
			<!-- 当Action中遇到Exception异常时， 系统将转入name为root的结果中 -->
			<exception-mapping exception="java.lang.Exception"
				result="root" />
		</global-exception-mappings>
		
		<!--============================下面是员工和经理共有的Action================== -->
		
		<!-- 定义处理退出请求的Action -->
		<action name="logout" class="qiang.action.common.LogoutAction">
			<result>/WEB-INF/content/login.jsp</result>
		</action>
		
		<!-- 定义处理登录系统的的Action -->
		<action name="login" class="qiang.action.common.LoginAction">
			<result name="input">/WEB-INF/content/login.jsp</result>
			<result name="mgr">/WEB-INF/content/manager/index.jsp</result>
			<result name="emp">/WEB-INF/content/employee/index.jsp</result>
			<result name="error">/WEB-INF/content/login.jsp</result>
		</action>
		
		<!-- 进入首页 -->
		<action name="*Index">
			<result>/WEB-INF/content/{1}/index.jsp</result>
		</action>
		
		<!-- 进入打卡 -->
		<action name="*Punch" class="qiang.action.common.PunchAction">
			<interceptor-ref name="empStack" />
			<result>/WEB-INF/content/{1}/punch.jsp</result>
		</action>

		<!-- 处理上班打卡 -->
		<action name="*Come" method="come" class="qiang.action.common.ProcessPunchAction">
			<interceptor-ref name="empStack" />
			<result>/WEB-INF/content/{1}/index.jsp</result>
		</action>
		
		<!-- 处理下班打卡 -->
		<action name="*Leave" method="leave" class="qiang.action.common.ProcessPunchAction">
			<interceptor-ref name="empStack" />
			<result>/WEB-INF/content/{1}/index.jsp</result>
		</action>
		
		<!-- 查看本人工资的Action -->
		<action name="*ViewSalary" class="qiang.action.common.ViewSalaryAction">
			<interceptor-ref name="basicStack" />
			<interceptor-ref name="empAuth" />
			<result>/WEB-INF/content/{1}/viewSalary.jsp</result>
		</action>
				
		<!-- 进入修改密码的页面 -->
		<action name="*ShowChangePass">
			<interceptor-ref name="empStack" />
			<result>/WEB-INF/content/{1}/changePass.jsp</result>
		</action>
		
		<!-- 修改自己的密码 -->
		<action name="*ChangePass" class="qiang.action.common.ChangePassAction">
			<interceptor-ref name="empStack" />
			<result name="input">/WEB-INF/content/{1}/changePass.jsp</result>
			<result>/WEB-INF/content/{1}/index.jsp</result>
		</action>
		
		<action name="*">
			<result>/WEB-INF/content/{1}.jsp</result>
		</action>
		
		<!--============================下面是员工角色的Action======================== -->
		
		<!-- 查看自己的非正常出勤 -->
		<action name="viewUnPunch" class="qiang.action.employee.ViewUnAttendAction">
			<interceptor-ref name="basicStack" />
			<interceptor-ref name="empAuth" />
			<result>/WEB-INF/content/employee/viewUnAttend.jsp</result>
		</action>

		<!-- 进入异动申请 -->
		<action name="appChange" class="qiang.action.employee.AppChangeAction">
			<interceptor-ref name="store">
				<param name="operationMode">RETRIEVE</param>
			</interceptor-ref>
			<interceptor-ref name="basicStack" />
			<interceptor-ref name="empAuth" />
			<result>/WEB-INF/content/employee/appChange.jsp</result>
		</action>

		<!-- 提交异动申请 -->
		<action name="processApp" class="qiang.action.employee.ProcessAppAction">
			<interceptor-ref name="store">
				<param name="operationMode">STORE</param>
			</interceptor-ref>
			<interceptor-ref name="empStack" />
			<result name="input" type="redirect">
				/appChange.action?attid=${attId}
			</result>
			<result>/WEB-INF/content/employee/index.jsp</result>
		</action>
		
		<!-- 查看经理下达的任务 -->
		<action name="viewTask" class="qiang.action.employee.ViewTaskAction">
			<interceptor-ref name="empStack" />
			<result>/WEB-INF/content/employee/viewTask.jsp</result>
		</action>

		<!--============================下面是经理角色的Action======================== -->
		
		<!-- 进入添加员工 -->
		<action name="showAddEmp">
			<interceptor-ref name="mgrStack" />
			<result>/WEB-INF/content/manager/addEmp.jsp</result>
		</action>
		
		<!-- 经理增加员工 -->
		<action name="addEmp" class="qiang.action.manager.AddEmpAction">
			<!-- 使用系统默认的拦截器栈 -->
			<interceptor-ref name="mgrStack" />
			<!-- 使用防刷新的token拦截器 -->
			<interceptor-ref name="token" />
			<!-- 定义重复提交转向的视图，该逻辑视图名必须是invalid.token -->
			<result name="invalid.token">/WEB-INF/content/manager/addEmp.jsp</result>
			<result name="input">/WEB-INF/content/manager/addEmp.jsp</result>
			<result name="error">/WEB-INF/content/manager/addEmp.jsp</result>
			<result>/WEB-INF/content/manager/index.jsp</result>
		</action>
		
		<!-- 经理删除员工 -->
		<action name="delEmp" class="qiang.action.manager.DelEmpAction">
			<!-- 使用系统默认的拦截器栈 -->
			<interceptor-ref name="mgrStack" />
			<result type="redirect">/viewEmp.action?pageBean.type=1</result>
		</action>
		
		<!-- 进入修改员工信息的界面 -->
		<action name="showEmp" class="qiang.action.manager.ShowEmpAction">
			<interceptor-ref name="mgrStack" />
			<result>/WEB-INF/content/manager/changeEmp.jsp</result>
		</action>
		
		<!-- 修改员工信息 -->
		<action name="changeEmp" class="qiang.action.manager.ChangeEmpAction">
			<interceptor-ref name="mgrStack" />
			<interceptor-ref name="token" />
			<!-- 定义重复提交转向的视图，该逻辑视图名必须是invalid.token -->
			<result name="invalid.token">/WEB-INF/content/manager/changeEmp.jsp</result>
			<result name="input">/WEB-INF/content/manager/changeEmp.jsp</result>
			<result type="redirect">/viewEmp.action?pageBean.type=1</result>
		</action>
		
		<!-- 经理查看员工 -->
		<action name="viewEmp" class="qiang.action.manager.ViewEmpAction">
			<interceptor-ref name="basicStack" />
			<interceptor-ref name="mgrAuth" />
			<result>/WEB-INF/content/manager/viewEmp.jsp</result>
		</action>
		
		<!-- 进入添加任务 -->
		<action name="showAddTask">
			<interceptor-ref name="mgrStack" />
			<result>/WEB-INF/content/manager/addTask.jsp</result>
		</action>
		
		<!-- 经理增加任务 -->
		<action name="addTask" class="qiang.action.manager.AddTaskAction">
			<!-- 使用系统默认的拦截器栈 -->
			<interceptor-ref name="mgrStack" />
			<!-- 使用防刷新的token拦截器 -->
			<interceptor-ref name="token" />
			<!-- 定义重复提交转向的视图，该逻辑视图名必须是invalid.token -->
			<result name="invalid.token">/WEB-INF/content/manager/addTask.jsp</result>
			<result name="input">/WEB-INF/content/manager/addTask.jsp</result>
			<result name="error">/WEB-INF/content/manager/addTask.jsp</result>
			<result>/WEB-INF/content/manager/index.jsp</result>
		</action>
		
		<!-- 经理删除任务 -->
		<action name="delTask" class="qiang.action.manager.DelTaskAction">
			<!-- 使用系统默认的拦截器栈 -->
			<interceptor-ref name="mgrStack" />
			<result type="redirect">/adminTask.action?pageBean.type=1</result>
		</action>
		
		<!-- 进入修改任务信息的界面 -->
		<action name="showTask" class="qiang.action.manager.ShowTaskAction">
			<interceptor-ref name="mgrStack" />
			<result>/WEB-INF/content/manager/changeTask.jsp</result>
		</action>
		
		<!-- 修改任务信息 -->
		<action name="changeTask" class="qiang.action.manager.ChangeTaskAction">
			<interceptor-ref name="mgrStack" />
			<interceptor-ref name="token" />
			<!-- 定义重复提交转向的视图，该逻辑视图名必须是invalid.token -->
			<result name="invalid.token">/WEB-INF/content/manager/changeTask.jsp</result>
			<result name="input">/WEB-INF/content/manager/changeTask.jsp</result>
			<result type="redirect">/adminTask.action?pageBean.type=1</result>
		</action>
		
		<!-- 经理管理任务 -->
		<action name="adminTask" class="qiang.action.manager.AdminTaskAction">
			<interceptor-ref name="basicStack" />
			<interceptor-ref name="mgrAuth" />
			<result>/WEB-INF/content/manager/adminTask.jsp</result>
		</action>
		
		<!-- 查看部门的工资 -->
		<action name="viewDeptSal" class="qiang.action.manager.ViewDeptSalAction">
			<interceptor-ref name="basicStack" />
			<interceptor-ref name="mgrAuth" />
			<result>/WEB-INF/content/manager/viewDeptSal.jsp</result>
		</action>
		
		<!-- 经理查看申请 -->
		<action name="viewApp" class="qiang.action.manager.ViewAppAction">
			<interceptor-ref name="basicStack" />
			<interceptor-ref name="mgrAuth" />
			<result>/WEB-INF/content/manager/viewApp.jsp</result>
		</action>

		<!-- 经理处理申请 -->
		<action name="checkApp" class="qiang.action.manager.CheckAppAction">
			<interceptor-ref name="mgrStack" />
			<result type="chain">viewApp</result>
		</action>
		
		<!--============================下面是其他的Action========================== -->
		
		<!-- 生成数据 -->
		<action name="data" class="qiang.others.data.DataAction">
			<result>/data.jsp</result>
		</action>
		
		<!-- 测试 -->
		<action name="db" class="qiang.others.test.DBAction">
			<result>/dbJsp.jsp</result>
		</action>
	</package>
</struts>